{"ast":null,"code":"import _defineProperty from \"/Users/work/www/flatiron/mod-6/react/for-hooks-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/work/www/flatiron/mod-6/react/for-hooks-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/work/www/flatiron/mod-6/react/for-hooks-blog/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const _useState = useState({\n    strikes: 2,\n    balls: 2\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fullCount = _useState4[0],\n        setFullCount = _useState4[1]; // Listen for changes to count\n\n\n  useEffect(() => {\n    // If four balls, batter walks\n    count.balls === 4 && window.alert(\"Batter walks.\");\n    resetCount(); // If three strikes, batter is out\n\n    count.strikes === 3 && window.alert(\"Strikeout!\");\n    resetCount(); // If three balls & two strikes, full count\n\n    count.balls === 3 && count.strikes === 2 && setFullCount(true);\n  }, [count]); // Listen for changes to fullCount\n\n  useEffect(() => {\n    fullCount === true && window.alert(\"Full Count! (Very exciting.)\");\n  }, [fullCount]); // Fire once. Like componentDidMount()\n\n  useEffect(() => {\n    window.alert(\"Take me out to the ball game...\");\n  }, []);\n  useEffect(() => {}, [count]);\n\n  function resetCount() {\n    setCount({\n      strikes: 0,\n      balls: 0\n    });\n    setFullCount(false);\n  }\n\n  function throwPitch() {\n    Math.floor(Math.random() * 2) ? strike() : ball();\n  }\n\n  function strike() {\n    setCount(_objectSpread({}, count, {\n      [count.strikes]: count.strikes++\n    }));\n  }\n\n  function ball() {\n    setCount(_objectSpread({}, count, {\n      [count.balls]: count.balls++\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, count.balls, \" balls - \", count.strikes, \" strikes\"), fullCount && React.createElement(\"small\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"...pause for suspense...\"), \" \"), \" \", React.createElement(\"button\", {\n    onClick: throwPitch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Throw Pitch\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/work/www/flatiron/mod-6/react/for-hooks-blog/src/App.js"],"names":["React","useState","useEffect","App","strikes","balls","count","setCount","fullCount","setFullCount","window","alert","resetCount","throwPitch","Math","floor","random","strike","ball","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaF,QAAQ,CAAC;AACjCG,IAAAA,OAAO,EAAE,CADwB;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CADrB;AAAA;AAAA,QACNC,KADM;AAAA,QACCC,QADD;;AAAA,qBAMqBN,QAAQ,CAAC,KAAD,CAN7B;AAAA;AAAA,QAMNO,SANM;AAAA,QAMKC,YANL,kBAQb;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AAEd;AACAI,IAAAA,KAAK,CAACD,KAAN,KAAgB,CAAhB,IAAqBK,MAAM,CAACC,KAAP,CAAa,eAAb,CAArB;AACAC,IAAAA,UAAU,GAJI,CAMd;;AACAN,IAAAA,KAAK,CAACF,OAAN,KAAkB,CAAlB,IAAuBM,MAAM,CAACC,KAAP,CAAa,YAAb,CAAvB;AACAC,IAAAA,UAAU,GARI,CAUd;;AACAN,IAAAA,KAAK,CAACD,KAAN,KAAgB,CAAhB,IACKC,KAAK,CAACF,OAAN,KAAkB,CADvB,IAEKK,YAAY,CAAC,IAAD,CAFjB;AAID,GAfQ,EAeN,CAACH,KAAD,CAfM,CAAT,CATa,CA0Bb;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,KAAK,IAAd,IACEE,MAAM,CAACC,KAAP,CAAa,8BAAb,CADF;AAED,GAHQ,EAGN,CAACH,SAAD,CAHM,CAAT,CA3Ba,CAgCb;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACC,KAAP,CAAa,iCAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM,CAAG,CAAV,EAAY,CAACI,KAAD,CAAZ,CAAT;;AAEA,WAASM,UAAT,GAAsB;AACpBL,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAAD,CAAR;AACAI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,WAASI,UAAT,GAAsB;AACpBC,IAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgCC,MAAM,EAAtC,GAA2CC,IAAI,EAA/C;AACD;;AAED,WAASD,MAAT,GAAkB;AAChBV,IAAAA,QAAQ,mBAAMD,KAAN;AAAa,OAACA,KAAK,CAACF,OAAP,GAAiBE,KAAK,CAACF,OAAN;AAA9B,OAAR;AACD;;AAED,WAASc,IAAT,GAAgB;AACdX,IAAAA,QAAQ,mBAAMD,KAAN;AAAa,OAACA,KAAK,CAACD,KAAP,GAAeC,KAAK,CAACD,KAAN;AAA5B,OAAR;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACD,KADT,eACyBC,KAAK,CAACF,OAD/B,aADF,EAIGI,SAAS,IACR;AAAO,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EACoC,GADpC,CALJ,EAQK,GARL,EASE;AAAQ,IAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CADF;AAaD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [count, setCount] = useState({\n    strikes: 2,\n    balls: 2\n  });\n\n  const [fullCount, setFullCount] = useState(false);\n\n  // Listen for changes to count\n  useEffect(() => {\n\n    // If four balls, batter walks\n    count.balls === 4 && window.alert(\"Batter walks.\");\n    resetCount();\n\n    // If three strikes, batter is out\n    count.strikes === 3 && window.alert(\"Strikeout!\");\n    resetCount();\n\n    // If three balls & two strikes, full count\n    count.balls === 3\n      && count.strikes === 2\n      && setFullCount(true);\n\n  }, [count]);\n\n  // Listen for changes to fullCount\n  useEffect(() => {\n    fullCount === true &&\n      window.alert(\"Full Count! (Very exciting.)\");\n  }, [fullCount]);\n\n  // Fire once. Like componentDidMount()\n  useEffect(() => {\n    window.alert(\"Take me out to the ball game...\");\n  }, []);\n\n  useEffect(() => { }, [count]);\n\n  function resetCount() {\n    setCount({ strikes: 0, balls: 0 });\n    setFullCount(false);\n  }\n\n  function throwPitch() {\n    Math.floor(Math.random() * 2) ? strike() : ball();\n  }\n\n  function strike() {\n    setCount({ ...count, [count.strikes]: count.strikes++ });\n  }\n\n  function ball() {\n    setCount({ ...count, [count.balls]: count.balls++ });\n  }\n\n  return (\n    <div>\n      <h1>\n        {count.balls} balls - {count.strikes} strikes\n      </h1>\n      {fullCount && (\n        <small style={{ color: \"red\" }}>\n          <em>...pause for suspense...</em>{\" \"}\n        </small>\n      )}{\" \"}\n      <button onClick={throwPitch}>Throw Pitch</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}