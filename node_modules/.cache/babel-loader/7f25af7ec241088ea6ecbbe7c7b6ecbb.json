{"ast":null,"code":"import _defineProperty from \"/Users/work/www/flatiron/mod-6/react/for-hooks-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/work/www/flatiron/mod-6/react/for-hooks-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/work/www/flatiron/mod-6/react/for-hooks-blog/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  // Initial state = {strikes: 0, balls: 0}\n  const _useState = useState({\n    strikes: 0,\n    balls: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1]; // Initial state = false\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fullCount = _useState4[0],\n        setFullCount = _useState4[1]; // Returns a 0 or 1\n\n\n  function throwPitch() {\n    // 1 = true = strike()\n    // 0 = false = ball()\n    Math.floor(Math.random() * 2) ? strike() : ball();\n  }\n\n  function strike() {\n    // Add one to strike count\n    setCount(_objectSpread({}, count, {\n      [count.strikes]: count.strikes++\n    }));\n    console.clear();\n  }\n\n  function ball() {\n    // Add one to ball count\n    setCount(_objectSpread({}, count, {\n      [count.balls]: count.balls++\n    }));\n    console.clear();\n  }\n\n  function resetCount() {\n    // Reset everything after walk or strikeout\n    setCount({\n      strikes: 0,\n      balls: 0\n    });\n    setFullCount(false);\n    console.clear();\n  } // Called once on page load, like componentDidMount()\n\n\n  useEffect(() => {\n    window.alert(\"Take me out to the ball game...\");\n  }, []); // Called on changes to [count]\n\n  useEffect(() => {\n    if (count.balls === 4) {\n      window.alert(\"Batter walks.\");\n      resetCount();\n    }\n\n    if (count.strikes === 3) {\n      window.alert(\"Strikeout!\");\n      resetCount();\n    }\n\n    if (count.balls === 3 && count.strikes === 2) {\n      setFullCount(true);\n    }\n  }, [count]); // Called on ALL renders\n\n  useEffect(() => {\n    const heckles = [\"Hey batta batta batta swing batta batta!\", \"Everybody move in!\", \"You're getting less hits than an Amish website!\", \"I've seen better cuts at a deli!\", \"I've seen better bats in a cave!\", \"No Batter, No Batter...\", \"Didn't you just sell me a hotdog?\"]; // Strike or ball logs one heckle\n    // Strikeout, walk, or full count logs two heckles\n\n    console.log(heckles[Math.floor(Math.random() * heckles.length)]);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, count.balls, \" balls - \", count.strikes, \" strikes\"), React.createElement(\"button\", {\n    onClick: throwPitch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Throw Pitch\"), fullCount && React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      marginLeft: \"10px\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Full count! (very exciting)\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/work/www/flatiron/mod-6/react/for-hooks-blog/src/App.js"],"names":["React","useState","useEffect","App","strikes","balls","count","setCount","fullCount","setFullCount","throwPitch","Math","floor","random","strike","ball","console","clear","resetCount","window","alert","heckles","log","length","color","marginLeft","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  // Initial state = {strikes: 0, balls: 0}\n  const [count, setCount] = useState({\n    strikes: 0,\n    balls: 0\n  });\n\n  // Initial state = false\n  const [fullCount, setFullCount] = useState(false);\n\n  // Returns a 0 or 1\n  function throwPitch() {\n    // 1 = true = strike()\n    // 0 = false = ball()\n    Math.floor(Math.random() * 2) ? strike() : ball();\n  }\n\n  function strike() {\n    // Add one to strike count\n    setCount({ ...count, [count.strikes]: count.strikes++ });\n    console.clear()\n  }\n\n  function ball() {\n    // Add one to ball count\n    setCount({ ...count, [count.balls]: count.balls++ });\n    console.clear()\n  }\n\n  function resetCount() {\n    // Reset everything after walk or strikeout\n    setCount({ strikes: 0, balls: 0 });\n    setFullCount(false)\n    console.clear()\n  }\n\n  // Called once on page load, like componentDidMount()\n  useEffect(() => {\n    window.alert(\"Take me out to the ball game...\");\n  }, []);\n\n  // Called on changes to [count]\n  useEffect(() => {\n    if (count.balls === 4) {\n      window.alert(\"Batter walks.\");\n      resetCount();\n    }\n    if (count.strikes === 3) {\n      window.alert(\"Strikeout!\");\n      resetCount();\n    }\n    if (count.balls === 3 && count.strikes === 2) {\n      setFullCount(true)\n    }\n  }, [count]);\n\n  // Called on ALL renders\n  useEffect(() => {\n    const heckles = [\n      \"Hey batta batta batta swing batta batta!\",\n      \"Everybody move in!\",\n      \"You're getting less hits than an Amish website!\",\n      \"I've seen better cuts at a deli!\",\n      \"I've seen better bats in a cave!\",\n      \"No Batter, No Batter...\",\n      \"Didn't you just sell me a hotdog?\"\n    ]\n    // Strike or ball logs one heckle\n    // Strikeout, walk, or full count logs two heckles\n    console.log(heckles[Math.floor(Math.random() * heckles.length)])\n  });\n\n  return (\n    <div>\n      <h1>{count.balls} balls - {count.strikes} strikes</h1>\n      <button onClick={throwPitch}>Throw Pitch</button>\n      {fullCount &&\n        <em style={{\n          color: \"red\", marginLeft: \"10px\", fontWeight: \"bold\"\n        }}>Full count! (very exciting)</em>}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}